

'''
doctest file for module 100-matrix_mul.py

function matrix_mul:
  multiplies two matrices
    Args:
        m_a(2-D list): first matrix
        m_b(2-D list): second matrix
    Return:
        product of the two matrices

>>> matrix_mul = __import__("100-matrix_mul").matrix_mul
>>> ma = [
...     [1,2,3],
...     [3,4,2],
...     [1,0,2]
... ]
>>> mb = [
...     [0,0,1],
...     [1,2,1],
...     [1,2,4]
... ]
>>> matrix_mul(ma, mb)
[[5, 10, 15], [6, 12, 15], [2, 4, 9]]
>>> mc = "the list"
>>> matrix_mul(mc, mb)
Traceback (most recent call last):
TypeError: m_a must be a list
>>> matrix_mul(ma, mc)
Traceback (most recent call last):
TypeError: m_b must be a list
>>> mc = [1, 3, 2]
>>> matrix_mul(mc, mb)
Traceback (most recent call last):
TypeError: m_a must be a list of lists
>>> matrix_mul(ma, mc)
Traceback (most recent call last):
TypeError: m_b must be a list of lists
>>> matrix_mul([], mb)
Traceback (most recent call last):
ValueError: m_a can't be empty
>>> matrix_mul(ma, [])
Traceback (most recent call last):
ValueError: m_b can't be empty
>>> mc = [
...     [1,0,"a"],
...     [0,0,0],
...     [1,2,1]
... ]
>>> matrix_mul(ma, mc)
Traceback (most recent call last):
TypeError: m_b should contain only integers or floats
>>> matrix_mul(mc, ma)
Traceback (most recent call last):
TypeError: m_a should contain only integers or floats
>>> ma = [
...     [1,2],
...     [0,2,1],
...     [2,1,1]
... ]
>>> matrix_mul(ma, mb)
Traceback (most recent call last):
TypeError: each row of m_a must be of the same size
>>> matrix_mul(mb, ma)
Traceback (most recent call last):
TypeError: each row of m_b must be of the same size
>>> ma = [
...     [2,1,1],
...     [0,2,1]
... ]
>>> mb
[[0, 0, 1], [1, 2, 1], [1, 2, 4]]
>>> ma
[[2, 1, 1], [0, 2, 1]]
>>> matrix_mul(ma, mb)
[[2, 4, 7], [3, 6, 6]]
>>> matrix_mul(mb, ma)
Traceback (most recent call last):
ValueError: m_a and m_b can't be multiplied

'''
